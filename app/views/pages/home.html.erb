<%= render "base/sidebar" %>
<div class="content-wrapper">
	<div class="content-header">
		<div class="container-fluid">
			<div class="row mb-2">
				<div class="col-sm-6">
					<h1 class="m-0 text-dark">Tổng quan tài khoản</h1>
				</div>
				<div class="col-sm-6">
					<ol class="breadcrumb float-sm-right">
					<li class="breadcrumb-item"><a href="#">Home</a></li>
					<li class="breadcrumb-item active">Tổng quan</li>
					</ol>
				</div>
			</div>
		</div>
	</div>
	<div class="content container-fluid">
		<div class="container-fluid">  
	
		
	<div class="row">
          <div class="col-md-12">
            <div class="card">
              <div class="card-header">
                <h5 class="card-title"><strong>Tổng quan hàng tháng</strong></h5>
              </div>
              <!-- /.card-header -->
              <div class="card-body">
                <div class="row">
                  <div class="col-md-12">
               <strong><p class="text-center" id="salesDate">
                    <!-- Sales date will be filled dynamically by JavaScript -->
                  </p></strong>
                    <!-- /.chart-responsive -->
                  </div>
                  <!-- /.col -->
                           <!-- /.col -->
                </div>
                <!-- /.row -->
              </div>
              <!-- ./card-body -->
              <div class="card-footer">
                <div class="row">
                  <div class="col-sm-3 col-6">
                    <div class="description-block border-right">
                      <h5 class="description-header" id="total_deposit" style="color: blue;">$</h5>
                      <span class="description-text">TỔNG NẠP</span>
                    </div>
                    <!-- /.description-block -->
                  </div>
                  <!-- /.col -->
                  <div class="col-sm-3 col-6">
                    <div class="description-block border-right">
                      <h5 class="description-header" id="total_withdraw" style="color: yellow;">$</h5>
                      <span class="description-text">TỔNG RÚT</span>
                    </div>
                    <!-- /.description-block -->
                  </div>
                  <!-- /.col -->
                  <div class="col-sm-3 col-6">
                    <div class="description-block border-right">
                      <h5 class="description-header" id="total_bet" style="color: orange;">$</h5>
                      <span class="description-text">TỔNG CƯỢC</span>
                    </div>
                    <!-- /.description-block -->
                  </div>
                  <!-- /.col -->
                  <div class="col-sm-3 col-6">
                    <div class="description-block">
                      <h5 class="description-header" id="total_profit">$1,200</h5>
                      <span class="description-text">LỢI NHUẬN</span>
                    </div>
                    <!-- /.description-block -->
                  </div>
                </div>
                <!-- /.row -->
              </div>
              <!-- /.card-footer -->
            </div>
            <!-- /.card -->
          </div>
          <!-- /.col -->
        </div>	
		
		
		
		<div class="card card-primary">
  <div class="card-header border-transparent">
    <h3 class="card-title">Biến động số dư</h3>

    <div class="card-tools">
      <button type="button" class="btn btn-tool" data-card-widget="collapse">
        <i class="fas fa-minus"></i>
      </button>
      <button type="button" class="btn btn-tool" data-card-widget="remove">
        <i class="fas fa-times"></i>
      </button>
    </div>
  </div>
  <!-- /.card-header -->
  <div class="card-body p-0">
    <div class="table-responsive">
      <table class="table table-dark table-striped m-0">
        <thead>
          <tr>
            <th>Danh mục</th>
            <th>Tiền cược</th>
            <th>Lợi nhuận</th>
            <th>Thời gian</th>
          </tr>
        </thead>
        <tbody id="history_wallet_tbody">
          <!-- Các hàng sẽ được thêm động từ JavaScript -->
        </tbody>
      </table>
    </div>
    <!-- /.table-responsive -->
  </div>
  <!-- /.card-body -->
 <div class="card-footer">
    <div class="pagination">
        <button id="prevPage" class="btn btn-info">Previous</button>
        <span id="pageInfo"></span>
        <button id="nextPage" class="btn btn-info">Next</button>
    </div>
</div>
  <!-- /.card-footer -->
</div>
		
		
		
		</div>
	</div>
	</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const rowsPerPage = 30;
    let currentPage = 1;
    let dataCache = [];

    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    function renderTablePage(data, page) {
        const tbody = document.getElementById('history_wallet_tbody');
        tbody.innerHTML = '';

        const start = (page - 1) * rowsPerPage;
        const end = page * rowsPerPage;
        const pageData = data.slice(start, end);

        pageData.forEach(entry => {
            const tr = document.createElement('tr');

            const categoryTd = document.createElement('td');
            categoryTd.innerText = entry.content;
            tr.appendChild(categoryTd);

            const betTd = document.createElement('td');
            betTd.innerText = `$${numberWithCommas(entry.money_buy.toFixed(2))}`;
            tr.appendChild(betTd);

            const profitTd = document.createElement('td');
            const profitValue = entry.reward.toFixed(2);
            profitTd.innerText = `$${numberWithCommas(profitValue)}`;
            profitTd.style.color = profitValue <= 0 ? 'red' : 'green';
            tr.appendChild(profitTd);

            const timeTd = document.createElement('td');
            timeTd.innerText = new Date(entry.created_at).toLocaleString();
            tr.appendChild(timeTd);

            tbody.appendChild(tr);
        });

        document.getElementById('pageInfo').innerText = `Page ${page} of ${Math.ceil(data.length / rowsPerPage)}`;
        document.getElementById('prevPage').disabled = page === 1;
        document.getElementById('nextPage').disabled = page === Math.ceil(data.length / rowsPerPage);
    }

    function fetchData() {
        fetch('/get_info/info_user')
            .then(response => response.json())
            .then(data => {
                if (data.code === 0) {
                    document.getElementById('total_deposit').innerText = `$${numberWithCommas(data.total_deposit.toFixed(2))}`;
                    document.getElementById('total_withdraw').innerText = `$${numberWithCommas(data.total_withdraw.toFixed(2))}`;
                    document.getElementById('total_bet').innerText = `$${numberWithCommas(data.total_bet.toFixed(2))}`;

                    const totalProfitElement = document.getElementById('total_profit');
                    const totalProfitValue = data.total_profit.toFixed(2);
                    totalProfitElement.innerText = `$${numberWithCommas(totalProfitValue)}`;
                    totalProfitElement.style.color = totalProfitValue < 0 ? 'red' : 'green';

                    const currentDate = new Date();
                    const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
                    const salesDateText = `Từ ngày ${firstDayOfMonth.toLocaleDateString()} đến ${currentDate.toLocaleDateString()}`;
                    document.getElementById('salesDate').innerText = salesDateText;

                    dataCache = data.data;
                    renderTablePage(dataCache, currentPage);
                } else {
                    console.error(data.msg);
                }
            })
            .catch(error => {
                console.error('Error fetching data:', error);
            });
    }

    fetchData();

    document.getElementById('prevPage').addEventListener('click', prevPage);
    document.getElementById('nextPage').addEventListener('click', nextPage);

    function prevPage() {
        if (currentPage > 1) {
            currentPage--;
            renderTablePage(dataCache, currentPage);
        }
    }

    function nextPage() {
        if (currentPage < Math.ceil(dataCache.length / rowsPerPage)) {
            currentPage++;
            renderTablePage(dataCache, currentPage);
        }
    }
});
</script>
